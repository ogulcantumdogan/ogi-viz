{
  "baseVals": {
    "rating": 5,
    "gammaadj": 1.2,
    "decay": 0.95,
    "echo_zoom": 1.01,
    "echo_alpha": 0.4,
    "echo_orient": 0,
    "wave_mode": 0,
    "additivewave": 0,
    "wave_dots": 0,
    "wave_thick": 0,
    "modwavealphabyvolume": 0,
    "modwavealphastart": 0.5,
    "modwavealphaend": 1,
    "wave_brighten": 0,
    "darken_center": 0,
    "wrap": 0,
    "darken": 0,
    "brighten": 0,
    "wave_a": 0.1,
    "wave_scale": 0.5,
    "wave_smoothing": 0.5,
    "wave_mystery": 0,
    "warpanimspeed": 1,
    "warpscale": 1,
    "zoomexp": 1,
    "zoom": 1.002,
    "rot": 0,
    "cx": 0.5,
    "cy": 0.5,
    "dx": 0,
    "dy": 0,
    "warp": 0.01,
    "sx": 1,
    "sy": 1,
    "wave_r": 1,
    "wave_g": 0.8,
    "wave_b": 0.3,
    "wave_x": 0.5,
    "wave_y": 0.5,
    "ob_size": 0,
    "ob_r": 0,
    "ob_g": 0,
    "ob_b": 0,
    "ob_a": 0,
    "ib_size": 0,
    "ib_r": 0,
    "ib_g": 0,
    "ib_b": 0,
    "ib_a": 0,
    "nMotionVectorsX": 64,
    "nMotionVectorsY": 48,
    "mv_x": 0,
    "mv_y": 0,
    "mv_dx": 0,
    "mv_dy": 0,
    "mv_l": 0.9,
    "mv_r": 1,
    "mv_g": 1,
    "mv_b": 1,
    "mv_a": 0
  },
  "shapes": [
    {
      "baseVals": {
        "enabled": 1,
        "sides": 100,
        "additive": 1,
        "thick": 0,
        "textured": 0,
        "num_inst": 16,
        "x": 0.5,
        "y": 0.5,
        "rad": 0.08,
        "ang": 0,
        "tex_ang": 0,
        "tex_zoom": 1,
        "r": 1,
        "g": 1,
        "b": 0.2,
        "a": 0.7,
        "r2": 1,
        "g2": 1,
        "b2": 0.2,
        "a2": 0.7,
        "border_r": 1,
        "border_g": 1,
        "border_b": 0.2,
        "border_a": 0.8
      },
      "init_eqs_str": "a.face_id=0;a.grid_size=4;",
      "frame_eqs_str": "a.face_id=instance%16;a.grid_x=a.face_id%a.grid_size;a.grid_y=Math.floor(a.face_id/a.grid_size);a.base_x=0.2+0.2*a.grid_x;a.base_y=0.2+0.2*a.grid_y;a.orbit_radius=0.15;a.orbit_speed=0.3+0.1*a.face_id;a.x=a.base_x+a.orbit_radius*Math.sin(a.orbit_speed*a.time+a.face_id);a.y=a.base_y+a.orbit_radius*Math.cos(a.orbit_speed*a.time+a.face_id*0.7);a.r=0.8+0.2*Math.sin(2*a.time+a.face_id);a.g=0.9+0.1*Math.cos(1.5*a.time+a.face_id*0.5);a.b=0.3+0.2*Math.sin(3*a.time+a.face_id*0.3);a.rad=0.08+0.02*Math.sin(a.time*2+a.face_id);",
      "init_eqs_eel": "face_id = 0;\ngrid_size = 4;",
      "frame_eqs_eel": "face_id = instance % 16;\ngrid_x = face_id % grid_size;\ngrid_y = int(face_id / grid_size);\n\n// Base grid position\nbase_x = 0.2 + 0.2 * grid_x;\nbase_y = 0.2 + 0.2 * grid_y;\n\n// Orbital movement\norbit_radius = 0.15;\norbit_speed = 0.3 + 0.1 * face_id;\nx = base_x + orbit_radius * sin(orbit_speed * time + face_id);\ny = base_y + orbit_radius * cos(orbit_speed * time + face_id * 0.7);\n\n// Color animation\nr = 0.8 + 0.2 * sin(2 * time + face_id);\ng = 0.9 + 0.1 * cos(1.5 * time + face_id * 0.5);\nb = 0.3 + 0.2 * sin(3 * time + face_id * 0.3);\n\n// Size animation\nrad = 0.08 + 0.02 * sin(time * 2 + face_id);"
    },
    {
      "baseVals": {
        "enabled": 1,
        "sides": 100,
        "additive": 1,
        "thick": 0,
        "textured": 0,
        "num_inst": 16,
        "x": 0.42,
        "y": 0.42,
        "rad": 0.015,
        "ang": 0,
        "tex_ang": 0,
        "tex_zoom": 1,
        "r": 0.2,
        "g": 0.2,
        "b": 0.8,
        "a": 0.9,
        "r2": 0.2,
        "g2": 0.2,
        "b2": 0.8,
        "a2": 0.9,
        "border_r": 0.1,
        "border_g": 0.1,
        "border_b": 0.9,
        "border_a": 1
      },
      "init_eqs_str": "a.face_id=0;a.grid_size=4;a.eye_offset=0.05;",
      "frame_eqs_str": "a.face_id=instance%16;a.grid_x=a.face_id%a.grid_size;a.grid_y=Math.floor(a.face_id/a.grid_size);a.base_x=0.2+0.2*a.grid_x;a.base_y=0.2+0.2*a.grid_y;a.orbit_radius=0.15;a.orbit_speed=0.3+0.1*a.face_id;a.face_x=a.base_x+a.orbit_radius*Math.sin(a.orbit_speed*a.time+a.face_id);a.face_y=a.base_y+a.orbit_radius*Math.cos(a.orbit_speed*a.time+a.face_id*0.7);a.x=a.face_x-a.eye_offset;a.y=a.face_y-a.eye_offset*0.3;a.rad=0.015+0.005*Math.sin(a.time*3+a.face_id);",
      "init_eqs_eel": "face_id = 0;\ngrid_size = 4;\neye_offset = 0.05;",
      "frame_eqs_eel": "face_id = instance % 16;\ngrid_x = face_id % grid_size;\ngrid_y = int(face_id / grid_size);\n\n// Base grid position\nbase_x = 0.2 + 0.2 * grid_x;\nbase_y = 0.2 + 0.2 * grid_y;\n\n// Orbital movement (same as face)\norbit_radius = 0.15;\norbit_speed = 0.3 + 0.1 * face_id;\nface_x = base_x + orbit_radius * sin(orbit_speed * time + face_id);\nface_y = base_y + orbit_radius * cos(orbit_speed * time + face_id * 0.7);\n\n// Left eye position relative to face\nx = face_x - eye_offset;\ny = face_y - eye_offset * 0.3;\n\n// Eye size animation\nrad = 0.015 + 0.005 * sin(time * 3 + face_id);"
    },
    {
      "baseVals": {
        "enabled": 1,
        "sides": 100,
        "additive": 1,
        "thick": 0,
        "textured": 0,
        "num_inst": 16,
        "x": 0.58,
        "y": 0.42,
        "rad": 0.015,
        "ang": 0,
        "tex_ang": 0,
        "tex_zoom": 1,
        "r": 0.2,
        "g": 0.2,
        "b": 0.8,
        "a": 0.9,
        "r2": 0.2,
        "g2": 0.2,
        "b2": 0.8,
        "a2": 0.9,
        "border_r": 0.1,
        "border_g": 0.1,
        "border_b": 0.9,
        "border_a": 1
      },
      "init_eqs_str": "a.face_id=0;a.grid_size=4;a.eye_offset=0.05;",
      "frame_eqs_str": "a.face_id=instance%16;a.grid_x=a.face_id%a.grid_size;a.grid_y=Math.floor(a.face_id/a.grid_size);a.base_x=0.2+0.2*a.grid_x;a.base_y=0.2+0.2*a.grid_y;a.orbit_radius=0.15;a.orbit_speed=0.3+0.1*a.face_id;a.face_x=a.base_x+a.orbit_radius*Math.sin(a.orbit_speed*a.time+a.face_id);a.face_y=a.base_y+a.orbit_radius*Math.cos(a.orbit_speed*a.time+a.face_id*0.7);a.x=a.face_x+a.eye_offset;a.y=a.face_y-a.eye_offset*0.3;a.rad=0.015+0.005*Math.sin(a.time*3+a.face_id);",
      "init_eqs_eel": "face_id = 0;\ngrid_size = 4;\neye_offset = 0.05;",
      "frame_eqs_eel": "face_id = instance % 16;\ngrid_x = face_id % grid_size;\ngrid_y = int(face_id / grid_size);\n\n// Base grid position\nbase_x = 0.2 + 0.2 * grid_x;\nbase_y = 0.2 + 0.2 * grid_y;\n\n// Orbital movement (same as face)\norbit_radius = 0.15;\norbit_speed = 0.3 + 0.1 * face_id;\nface_x = base_x + orbit_radius * sin(orbit_speed * time + face_id);\nface_y = base_y + orbit_radius * cos(orbit_speed * time + face_id * 0.7);\n\n// Right eye position relative to face\nx = face_x + eye_offset;\ny = face_y - eye_offset * 0.3;\n\n// Eye size animation\nrad = 0.015 + 0.005 * sin(time * 3 + face_id);"
    },
    {
      "baseVals": {
        "enabled": 1,
        "sides": 20,
        "additive": 1,
        "thick": 1,
        "textured": 0,
        "num_inst": 16,
        "x": 0.5,
        "y": 0.58,
        "rad": 0.035,
        "ang": 3.14159,
        "tex_ang": 0,
        "tex_zoom": 1,
        "r": 0.9,
        "g": 0.3,
        "b": 0.3,
        "a": 0.8,
        "r2": 0.9,
        "g2": 0.3,
        "b2": 0.3,
        "a2": 0.8,
        "border_r": 1,
        "border_g": 0.2,
        "border_b": 0.2,
        "border_a": 0.9
      },
      "init_eqs_str": "a.face_id=0;a.grid_size=4;a.mouth_offset=0.05;",
      "frame_eqs_str": "a.face_id=instance%16;a.grid_x=a.face_id%a.grid_size;a.grid_y=Math.floor(a.face_id/a.grid_size);a.base_x=0.2+0.2*a.grid_x;a.base_y=0.2+0.2*a.grid_y;a.orbit_radius=0.15;a.orbit_speed=0.3+0.1*a.face_id;a.face_x=a.base_x+a.orbit_radius*Math.sin(a.orbit_speed*a.time+a.face_id);a.face_y=a.base_y+a.orbit_radius*Math.cos(a.orbit_speed*a.time+a.face_id*0.7);a.x=a.face_x;a.y=a.face_y+a.mouth_offset;a.r=0.9+0.1*Math.sin(a.time*2+a.face_id);a.g=0.3+0.2*Math.cos(a.time*1.5+a.face_id*0.5);a.b=0.3+0.2*Math.sin(a.time*3+a.face_id*0.3);a.rad=0.035+0.01*Math.sin(a.time*1.5+a.face_id);a.ang=3.14159+0.3*Math.sin(a.time*0.5+a.face_id);",
      "init_eqs_eel": "face_id = 0;\ngrid_size = 4;\nmouth_offset = 0.05;",
      "frame_eqs_eel": "face_id = instance % 16;\ngrid_x = face_id % grid_size;\ngrid_y = int(face_id / grid_size);\n\n// Base grid position\nbase_x = 0.2 + 0.2 * grid_x;\nbase_y = 0.2 + 0.2 * grid_y;\n\n// Orbital movement (same as face)\norbit_radius = 0.15;\norbit_speed = 0.3 + 0.1 * face_id;\nface_x = base_x + orbit_radius * sin(orbit_speed * time + face_id);\nface_y = base_y + orbit_radius * cos(orbit_speed * time + face_id * 0.7);\n\n// Mouth position relative to face\nx = face_x;\ny = face_y + mouth_offset;\n\n// Animate smile color and size\nr = 0.9 + 0.1 * sin(time * 2 + face_id);\ng = 0.3 + 0.2 * cos(time * 1.5 + face_id * 0.5);\nb = 0.3 + 0.2 * sin(time * 3 + face_id * 0.3);\nrad = 0.035 + 0.01 * sin(time * 1.5 + face_id);\n\n// Animate smile curve\nang = 3.14159 + 0.3 * sin(time * 0.5 + face_id);"
    }
  ],
  "waves": [
    {
      "baseVals": {
        "enabled": 0,
        "samples": 512,
        "sep": 0,
        "scaling": 1,
        "smoothing": 0.5,
        "r": 1,
        "g": 1,
        "b": 1,
        "a": 1
      },
      "init_eqs_eel": "",
      "frame_eqs_eel": "",
      "point_eqs_eel": ""
    },
    {
      "baseVals": {
        "enabled": 0,
        "samples": 512,
        "sep": 0,
        "scaling": 1,
        "smoothing": 0.5,
        "r": 1,
        "g": 1,
        "b": 1,
        "a": 1
      },
      "init_eqs_eel": "",
      "frame_eqs_eel": "",
      "point_eqs_eel": ""
    },
    {
      "baseVals": {
        "enabled": 0,
        "samples": 512,
        "sep": 0,
        "scaling": 1,
        "smoothing": 0.5,
        "r": 1,
        "g": 1,
        "b": 1,
        "a": 1
      },
      "init_eqs_eel": "",
      "frame_eqs_eel": "",
      "point_eqs_eel": ""
    },
    {
      "baseVals": {
        "enabled": 0,
        "samples": 512,
        "sep": 0,
        "scaling": 1,
        "smoothing": 0.5,
        "r": 1,
        "g": 1,
        "b": 1,
        "a": 1
      },
      "init_eqs_eel": "",
      "frame_eqs_eel": "",
      "point_eqs_eel": ""
    }
  ],
  "init_eqs_str": "a.num_faces=16;",
  "frame_eqs_str": "a.zoom+=0.001*Math.sin(a.time*0.3);a.rot+=0.005*Math.cos(a.time*0.2);a.wave_r=0.8+0.2*Math.sin(a.time*0.7);a.wave_g=0.9+0.1*Math.cos(a.time*0.9);a.wave_b=0.4+0.3*Math.sin(a.time*1.1);a.cx=0.5+0.01*Math.sin(a.time*0.1);a.cy=0.5+0.01*Math.cos(a.time*0.13);",
  "pixel_eqs_str": "",
  "init_eqs_eel": "num_faces = 16;",
  "frame_eqs_eel": "// Gentle camera movement\nzoom = zoom + 0.001*sin(time*0.3);\nrot = rot + 0.005*cos(time*0.2);\n\n// Color cycling\nwave_r = 0.8 + 0.2*sin(time*0.7);\nwave_g = 0.9 + 0.1*cos(time*0.9);\nwave_b = 0.4 + 0.3*sin(time*1.1);\n\n// Background effects\ncx = 0.5 + 0.01*sin(time*0.1);\ncy = 0.5 + 0.01*cos(time*0.13);",
  "pixel_eqs_eel": "",
  "warp": " shader_body { \n  vec3 ret_1;\n  vec2 center = vec2(0.5, 0.5);\n  vec2 offset = uv - center;\n  float dist = length(offset);\n  float angle = atan(offset.y, offset.x);\n  \n  // Gentle swirling effect\n  float warp_strength = 0.005 + 0.003*sin(time*1.5);\n  float swirl_freq = 4.0 + 2.0*sin(time*0.3);\n  vec2 warp_offset = warp_strength * vec2(\n    sin(swirl_freq * angle + time*0.8),\n    cos(swirl_freq * angle + time*1.1)\n  ) * smoothstep(0.8, 0.2, dist);\n  \n  ret_1 = texture(sampler_main, uv + warp_offset).xyz;\n  ret_1 = ret_1 * (0.98 + 0.02*sin(time*2.0));\n  \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ret_1;\n  ret = tmpvar_1.xyz;\n }",
  "comp": " shader_body { \n  vec3 ret_1;\n  vec2 center = vec2(0.5, 0.5);\n  vec2 offset = uv - center;\n  float dist = length(offset);\n  \n  // Get main texture\n  ret_1 = texture(sampler_main, uv).xyz;\n  \n  // Add gentle glow effect\n  vec3 blur_color = (texture(sampler_blur1, uv).xyz * scale1) + bias1;\n  ret_1 = ret_1 + blur_color * 0.2;\n  \n  // Enhance warm colors\n  ret_1 = ret_1 * vec3(1.1, 1.05, 0.95);\n  \n  // Subtle vignette\n  float vignette = 1.0 - smoothstep(0.4, 1.0, dist);\n  ret_1 = ret_1 * (0.8 + 0.2*vignette);\n  \n  // Final brightness\n  ret_1 = ret_1 * 1.1;\n  \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ret_1;\n  ret = tmpvar_1.xyz;\n }"
} 